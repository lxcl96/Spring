<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--创建druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql:///user_db"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

<!--    创建jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--    创建bean对象-->
    <bean id="userDaoImpl" class="com.ly.spring5xml.dao.UserDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>
    <bean id="userService" class="com.ly.spring5xml.service.UserService">
        <property name="userDao" ref="userDaoImpl"></property>
    </bean>

<!--    创建事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

<!--    配置通知 通知是事务中的方法 需要引入tx标签-->
    <tx:advice id="txadvice">
        <tx:attributes>
<!--            配置事务相关参数，指定在哪种规则的方法上面添加事务  name写方法名-->
            <tx:method name="transerMoney" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
<!--            <tx:method name="transer*"/> 或者这样，比表示以transer开头的所以方法-->
        </tx:attributes>
    </tx:advice>

<!--    配置切入点和切面 需要引入aop标签-->
    <aop:config>
<!--        切入点 此处放事务类  Spring根据切入点把事务加到这里-->
        <aop:pointcut id="transerMoney" expression="execution(* com.ly.spring5xml.service.UserService.transerMoney(..))"/>
<!--        切面 一种是给自己创建的类 一种是给spring注解使用-->
<!--        <aop:aspect ref="userService">-->
<!--            <aop:before method="" pointcut-ref="transerMoney"></aop:before>-->
<!--        </aop:aspect>-->
        <aop:advisor advice-ref="txadvice" pointcut-ref="transerMoney"></aop:advisor>
    </aop:config>
</beans>